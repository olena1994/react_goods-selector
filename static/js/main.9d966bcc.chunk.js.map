{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","id","uuid","value","App","state","selectedGoods","addGood","setState","removeGood","selectedGood","filter","formatTitle","length","slice","join","clearSelection","this","className","type","onClick","isGoodSelected","includes","buttonCallback","buttonTitle","buttonToRender","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6PASMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,GAAIC,cACJC,MAAOH,MASHI,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACP,GACT,IAAQM,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBN,O,EAGpDS,WAAa,SAACC,GACZ,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CACZF,cAAeA,EAAcK,QAAO,SAAAX,GAAI,OAAIA,IAASU,Q,EAIzDE,YAAc,WACZ,IAAQN,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcO,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUP,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcQ,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDT,EAAcA,EAAcO,OAAS,M,EAIlGG,eAAiB,kBAAM,EAAKR,SAAS,CAAEF,cAAe,M,4CAEtD,WAAU,IAAD,OACCA,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,+BACG,kBACAD,KAAKL,iBAGR,wBACEO,KAAK,SACLD,UAAU,iCACVE,QAASH,KAAKD,eAHhB,mBAQA,oBAAIE,UAAU,UAAd,SACGpB,EAAgBC,KACf,SAAAC,GACE,IAAMqB,EAAiBf,EAAcgB,SAAStB,EAAKG,OAE7CoB,EAAiBF,EACnB,kBAAM,EAAKZ,WAAWT,EAAKG,QAC3B,kBAAM,EAAKI,QAAQP,EAAKG,QAEtBqB,EAAcH,EAChB,cACA,WAEEI,EACJ,wBACEP,UAAU,cACVC,KAAK,SACLC,QAASG,EAHX,SAKGC,IAIL,OACE,qBAEEN,UACEG,EACI,0BACA,UALR,UAQGrB,EAAKG,MACLsB,IARIzB,EAAKC,gB,GA/EVyB,IAAMC,WAkGTvB,IC9HfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9d966bcc.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './App.scss';\n\ninterface Good {\n  id: string;\n  value: string;\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  id: uuid(),\n  value: good,\n}));\n\ntype Props = {};\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  };\n\n  removeGood = (selectedGood: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: selectedGoods.filter(good => good !== selectedGood),\n    });\n  };\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]}`;\n    }\n  };\n\n  clearSelection = () => this.setState({ selectedGoods: [] });\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {'Selected good: '}\n          {this.formatTitle()}\n        </h1>\n\n        <button\n          type=\"button\"\n          className=\"App--button App--button--clear\"\n          onClick={this.clearSelection}\n        >\n          Clear\n        </button>\n\n        <ul className=\"App--ul\">\n          {goodsFromServer.map(\n            good => {\n              const isGoodSelected = selectedGoods.includes(good.value);\n\n              const buttonCallback = isGoodSelected\n                ? () => this.removeGood(good.value)\n                : () => this.addGood(good.value);\n\n              const buttonTitle = isGoodSelected\n                ? 'Remove good'\n                : 'Add good';\n\n              const buttonToRender = (\n                <button\n                  className=\"App--button\"\n                  type=\"button\"\n                  onClick={buttonCallback}\n                >\n                  {buttonTitle}\n                </button>\n              );\n\n              return (\n                <li\n                  key={good.id}\n                  className={\n                    isGoodSelected\n                      ? 'App--li App--li--active'\n                      : 'App--li'\n                  }\n                >\n                  {good.value}\n                  {buttonToRender}\n                </li>\n              );\n            },\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}